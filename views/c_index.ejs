<!DOCTYPE html>
<html>
<head>
    <title>게시판</title>
</head>
<body>
<h1 align="center">게시판</h1>
<div align="right" id="menu">
    <a href="/api/login" id="loginLink">로그인</a>
    <a href="/api/register">회원가입</a>
    <a href="#" id="logoutLink" style="display: none;">로그아웃</a>
</div>
<br>
<div align="center">
    <a href="/c_create">게시물 작성</a>
</div>
<br>

<ul>
    <% for (let post of posts) { %>
        <li>
            <a href="/c_post/<%= post._id %>"><%= post.title %></a>
        </li>
    <% } %>
</ul>

<script>

  // let isUserLoggedIn = false; // 현재 사용자의 로그인 상태 (기본값: 로그아웃)
  // console.log('isUserLoggedIn:', isUserLoggedIn);


  const jwtToken = " eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiIxMjMiLCJhdXRob3JpdGllcyI6W10sImlhdCI6MTY5NDY4NzM3NiwiZXhwIjoxNjk0Njg3Njc2fQ.Ijh57WLVCksQLPYlkfqQFuV_MAX__evB6p4l-KT-q8I"; // 실제 JWT 토큰 값으로 대체

  // /api/authenticate
  fetch('/api/authenticate', {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${jwtToken}`,
    },
  })
  .then((response) => {
    if (response.ok) {
      return response.json();
    } else {
      console.error('인증 실패');
    }
  })
  .then((userData) => {
    if (userData) {
      console.log('사용자 정보:', userData);

      // 사용자가 인증되었으면 로그인 및 회원가입 버튼을 숨깁니다.
      const loginLink = document.getElementById('loginLink');
      const registerLink = document.querySelector('a[href="/api/register"]');
      if (loginLink && registerLink) {
        loginLink.style.display = 'none';
        registerLink.style.display = 'none';
      }



      // 로그아웃 링크 생성
      const logoutLink = document.createElement('a');
      logoutLink.href = '/api/logout'; // 로그아웃 URL
      logoutLink.textContent = '로그아웃';

      // 로그아웃 링크 메뉴 추가
      const menuDiv = document.getElementById('menu');
      menuDiv.appendChild(logoutLink);

      logoutLink.addEventListener('click', async function (event) {
        event.preventDefault();

        // 로그아웃 요청을 백으로 보냄
        const response = await fetch('/api/logout', {
          method:'POST',
          credentials:'same-origin',
        });
        console.log('로그아웃 응답:', response);

        if (response.ok) {
          loginLink.style.display = 'inline'; // 로그인 버튼 표시
          registerLink.style.display = 'inline'; // 회원가입 버튼 표시
          menuDiv.removeChild(logoutLink);
        } else {
          console.error('로그아웃 실패');
        }

      })
    }
  })

</script>

<!--<script>-->
<!--  // 로그인 요청을 보내고 토큰을 받는 함수-->


<!--  async function login(username, password) {-->
<!--    try {-->
<!--      const response = await fetch('/api/login', {-->
<!--        method: 'POST',-->
<!--        body: UserDTO,-->
<!--        headers: {-->
<!--          'Content-Type': 'application/json',-->
<!--        },-->
<!--      });-->

<!--      if (response.ok) {-->
<!--        const data = await response.json();-->
<!--        const jwtToken = data.accessToken;-->

<!--        // 토큰을 저장-->
<!--        localStorage.setItem('jwtToken', jwtToken);-->

<!--        // 로그인 성공-->
<!--        return true;-->
<!--      } else {-->
<!--        console.error('로그인 실패');-->
<!--        return false;-->
<!--      }-->
<!--    } catch (error) {-->
<!--      console.error('로그인 요청 실패:', error);-->
<!--      return false;-->
<!--    }-->
<!--  }-->

<!--  // 페이지 로드 시 사용자가 로그인되어 있는지 확인-->
<!--  fetch('/api/authenticate', {-->
<!--    method: 'GET',-->
<!--    credentials: 'include',-->
<!--  })-->
<!--  .then((response) => {-->
<!--    if (response.ok) {-->
<!--      return response.json();-->
<!--    }-->
<!--    return null;-->
<!--  })-->
<!--  .then((userData) => {-->
<!--    if (userData) {-->
<!--      isUserLoggedIn = true;-->

<!--      // 사용자 정보를 클라이언트 측에 저장-->
<!--      const userInformation = {-->
<!--        id: userData.id,-->
<!--        username: userData.username,-->
<!--        // 다른 사용자 정보 필드도 필요한 경우 여기에 추가-->
<!--      };-->
<!--      localStorage.setItem('userInformation', JSON.stringify(userInformation));-->

<!--      // 사용자가 로그인되어 있는 경우 로그인 링크를 로그아웃 링크로 변경-->
<!--      const loginLink = document.getElementById('loginLink');-->
<!--      if (loginLink) {-->
<!--        loginLink.textContent = '로그아웃';-->
<!--        loginLink.href = '#'; // 로그아웃 버튼에는 href 필요 없음-->
<!--        loginLink.addEventListener('click', async function (event) {-->
<!--          event.preventDefault();-->
<!--          // 로그아웃 요청을 서버로 보내고 성공하면 페이지를 새로고침-->
<!--          const response = await fetch('/api/logout', {-->
<!--            method: 'POST',-->
<!--            credentials: 'include',-->
<!--          });-->
<!--          if (response.ok) {-->
<!--            // 사용자 정보를 삭제하고 페이지를 새로 고침-->
<!--            localStorage.removeItem('userInformation');-->
<!--            window.location.reload();-->
<!--          }-->
<!--        });-->
<!--      }-->
<!--    }-->
<!--  });-->

<!--</script>-->


</body>
</html>
