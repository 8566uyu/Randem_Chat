<!DOCTYPE html>
<html>
<head>
    <title>게시판</title>
</head>
<body>
<h1 align="center">게시판</h1>
<div align="right" id="menu">
    <a href="/api/login" id="loginLink">로그인</a>
    <a href="/api/register">회원가입</a>
    <a href="#" id="logoutLink" style="display: none;">로그아웃</a>
</div>
<br>
<div align="center">
    <a href="/board/create">게시물 작성</a>
</div>

<br>

<div align="center">
    <a href="/board/article-list">게시판목록보기</a>
</div>

<script>



  // // 서버로부터 게시물 목록 가져오기
  // fetch('/board/articles')
  // .then((response) => response.json())
  // .then((data) => {
  //   const articleList = document.getElementById('articleList');
  //
  //   // 게시물 목록을 순회하면서 목록 항목 생성
  //   data.forEach((article) => {
  //     const listItem = document.createElement('li');
  //     listItem.textContent = article.title; // 게시물 제목을 표시하거나 다른 필요한 정보를 표시할 수 있습니다.
  //     articleList.appendChild(listItem);
  //   });
  // })
  // .catch((error) => console.error('게시물 목록을 불러오지 못했습니다:', error));






  // let isUserLoggedIn = false; // 현재 사용자의 로그인 상태 (기본값: 로그아웃)
  // console.log('isUserLoggedIn:', isUserLoggedIn);


  const jwtToken = " eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiIxMjMiLCJhdXRob3JpdGllcyI6W10sImlhdCI6MTY5NDY4NzM3NiwiZXhwIjoxNjk0Njg3Njc2fQ.Ijh57WLVCksQLPYlkfqQFuV_MAX__evB6p4l-KT-q8I"; // 실제 JWT 토큰 값으로 대체

  // /api/authenticate
  fetch('/api/authenticate', {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${jwtToken}`,
    },
  })
  .then((response) => {
    if (response.ok) {
      return response.json();
    } else {
      console.error('인증 실패');
    }
  })
  .then((userData) => {
    if (userData) {
      console.log('사용자 정보:', userData);

      // 사용자가 인증되었으면 로그인 및 회원가입 버튼을 숨깁니다.
      const loginLink = document.getElementById('loginLink');
      const registerLink = document.querySelector('a[href="/api/register"]');
      if (loginLink && registerLink) {
        loginLink.style.display = 'none';
        registerLink.style.display = 'none';
      }



      // 로그아웃 링크 생성
      const logoutLink = document.createElement('a');
      logoutLink.href = '/api/logout'; // 로그아웃 URL
      logoutLink.textContent = '로그아웃';

      // 로그아웃 링크 메뉴 추가
      const menuDiv = document.getElementById('menu');
      menuDiv.appendChild(logoutLink);

      logoutLink.addEventListener('click', async function (event) {
        event.preventDefault();

        // 로그아웃 요청을 백으로 보냄
        const response = await fetch('/api/logout', {
          method:'POST',
          credentials:'same-origin',
        });
        console.log('로그아웃 응답:', response);

        if (response.ok) {
          loginLink.style.display = 'inline'; // 로그인 버튼 표시
          registerLink.style.display = 'inline'; // 회원가입 버튼 표시
          menuDiv.removeChild(logoutLink);
        } else {
          console.error('로그아웃 실패');
        }

      })
    }
  })

</script>
</body>
</html>
